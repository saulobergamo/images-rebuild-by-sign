buildscript {
    ext {
        javaVersion = JavaVersion.VERSION_11
        kotlinVersion = "1.7.10"
        springBootVersion = '2.7.2'
        spotlessVersion = "6.9.1"
        detektVersion = "1.21.0"
        springdocVersion = "1.6.9"
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessVersion"
    }
}

plugins {
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "1.0.13.RELEASE"
    id "java"
    id "jacoco"
    id "org.sonarqube" version "3.4.0.2513"
    id "com.github.jakemarsden.git-hooks" version "0.0.2"
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.22'
}

gitHooks {
    hooks = ["pre-push": "spotlessCheck detekt test"]
    gradleCommand = './gradlew'
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.jetbrains.kotlin.jvm"
apply from: "gradle/jacoco.gradle"
apply from: "gradle/sonar.gradle"
apply from: "gradle/spotless.gradle"
apply from: "gradle/detekt.gradle"

repositories {
    mavenCentral()
    maven {
        url "https://repo.gradle.org/gradle/libs-releases"
    }
}

group = "br.com.utfpr"
version = "1.0.0"
sourceCompatibility = javaVersion

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-aop:$springBootVersion"
    implementation "io.github.microutils:kotlin-logging:2.1.23"
    implementation "org.springdoc:springdoc-openapi-ui:$springdocVersion"
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-undertow:$springBootVersion"
    implementation "org.apache.commons:commons-csv:1.10.0"
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.jblas:jblas:1.2.5'
    implementation "org.python:jython-standalone:2.7.3"
    implementation 'org.nd4j:python4j-numpy:1.0.0-M2.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.springframework.boot:spring-boot-starter-activemq:$springBootVersion"
    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        exclude group: "org.mockito", module: "mockito-core"
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation 'io.mockk:mockk:1.12.5'
}

sonarqube {
    properties {
        property "sonar.projectName", "${project.name}"
    }
}

jacoco {
    toolVersion = "0.8.8"
}

configurations {
    implementation.exclude module: "spring-boot-starter-tomcat"
    all {
        exclude group: "junit", module: "junit"
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
}

task printVersion {
    doLast {
        println "Build version: $version"
    }
}

task printProjName {
    doLast {
        println "name: ${project.name}"
    }
}

jar {
    enabled = false
}
